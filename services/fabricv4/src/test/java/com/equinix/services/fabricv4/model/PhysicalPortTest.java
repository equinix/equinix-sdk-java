/*
 * Equinix Fabric API v4
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.services.fabricv4.model;

import com.equinix.services.fabricv4.model.PhysicalPortSettings;
import com.equinix.services.fabricv4.model.PhysicalPortType;
import com.equinix.services.fabricv4.model.PortAdditionalInfo;
import com.equinix.services.fabricv4.model.PortDemarcationPoint;
import com.equinix.services.fabricv4.model.PortInterface;
import com.equinix.services.fabricv4.model.PortLoa;
import com.equinix.services.fabricv4.model.PortNotification;
import com.equinix.services.fabricv4.model.PortOperation;
import com.equinix.services.fabricv4.model.PortOrder;
import com.equinix.services.fabricv4.model.PortState;
import com.equinix.services.fabricv4.model.PortTether;
import com.equinix.services.fabricv4.model.SimplifiedAccount;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PhysicalPort
 */
public class PhysicalPortTest {
    private final PhysicalPort model = new PhysicalPort();

    /**
     * Model tests for PhysicalPort
     */
    @Test
    public void testPhysicalPort() {
        // TODO: test PhysicalPort
    }

    /**
     * Test the property 'href'
     */
    @Test
    public void hrefTest() {
        // TODO: test href
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'account'
     */
    @Test
    public void accountTest() {
        // TODO: test account
    }

    /**
     * Test the property 'interfaceSpeed'
     */
    @Test
    public void interfaceSpeedTest() {
        // TODO: test interfaceSpeed
    }

    /**
     * Test the property 'interfaceType'
     */
    @Test
    public void interfaceTypeTest() {
        // TODO: test interfaceType
    }

    /**
     * Test the property 'uuid'
     */
    @Test
    public void uuidTest() {
        // TODO: test uuid
    }

    /**
     * Test the property 'tether'
     */
    @Test
    public void tetherTest() {
        // TODO: test tether
    }

    /**
     * Test the property 'demarcationPoint'
     */
    @Test
    public void demarcationPointTest() {
        // TODO: test demarcationPoint
    }

    /**
     * Test the property 'settings'
     */
    @Test
    public void settingsTest() {
        // TODO: test settings
    }

    /**
     * Test the property '_interface'
     */
    @Test
    public void _interfaceTest() {
        // TODO: test _interface
    }

    /**
     * Test the property 'notifications'
     */
    @Test
    public void notificationsTest() {
        // TODO: test notifications
    }

    /**
     * Test the property 'additionalInfo'
     */
    @Test
    public void additionalInfoTest() {
        // TODO: test additionalInfo
    }

    /**
     * Test the property 'order'
     */
    @Test
    public void orderTest() {
        // TODO: test order
    }

    /**
     * Test the property 'operation'
     */
    @Test
    public void operationTest() {
        // TODO: test operation
    }

    /**
     * Test the property 'loas'
     */
    @Test
    public void loasTest() {
        // TODO: test loas
    }

}
