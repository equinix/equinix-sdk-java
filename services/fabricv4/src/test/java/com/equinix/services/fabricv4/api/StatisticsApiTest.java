/*
 * Equinix Fabric API v4
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.services.fabricv4.api;

import com.equinix.services.fabricv4.ApiException;
import com.equinix.services.fabricv4.model.Duration;
import com.equinix.services.fabricv4.model.Error;
import com.equinix.services.fabricv4.model.MetricInterval;
import java.time.OffsetDateTime;
import com.equinix.services.fabricv4.model.QueryDirection;
import com.equinix.services.fabricv4.model.Sort;
import com.equinix.services.fabricv4.model.Statistics;
import com.equinix.services.fabricv4.model.TopUtilizedStatistics;
import java.util.UUID;
import com.equinix.services.fabricv4.model.ViewPoint;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StatisticsApi
 */
@Disabled
public class StatisticsApiTest {

    private final StatisticsApi api = new StatisticsApi();

    /**
     * Get Stats by uuid
     *
     * This API provides service-level metrics so that you can view access and gather key information required to manage service subscription sizing and capacity
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConnectionStatsByPortUuidTest() throws ApiException {
        String connectionId = null;
        OffsetDateTime startDateTime = null;
        OffsetDateTime endDateTime = null;
        ViewPoint viewPoint = null;
        Statistics response = api.getConnectionStatsByPortUuid(connectionId, startDateTime, endDateTime, viewPoint);
        // TODO: test validations
    }

    /**
     * Top Port Statistics
     *
     * This API provides top utilized service-level traffic metrics so that you can view access and gather key information required to manage service subscription sizing and capacity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPortStatsTest() throws ApiException {
        List<String> metros = null;
        Sort sort = null;
        Integer top = null;
        Duration duration = null;
        QueryDirection direction = null;
        MetricInterval metricInterval = null;
        String projectId = null;
        TopUtilizedStatistics response = api.getPortStats(metros, sort, top, duration, direction, metricInterval, projectId);
        // TODO: test validations
    }

    /**
     * Get Stats by uuid
     *
     * This API provides service-level traffic metrics so that you can view access and gather key information required to manage service subscription sizing and capacity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPortStatsByPortUuidTest() throws ApiException {
        UUID portId = null;
        OffsetDateTime startDateTime = null;
        OffsetDateTime endDateTime = null;
        Statistics response = api.getPortStatsByPortUuid(portId, startDateTime, endDateTime);
        // TODO: test validations
    }

}
