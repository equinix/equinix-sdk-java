/*
 * Equinix Fabric API v4
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.services.fabricv4.api;

import com.equinix.services.fabricv4.ApiException;
import com.equinix.services.fabricv4.model.Error;
import com.equinix.services.fabricv4.model.GetAllStreamSubscriptionResponse;
import com.equinix.services.fabricv4.model.StreamSubscription;
import com.equinix.services.fabricv4.model.StreamSubscriptionPostRequest;
import com.equinix.services.fabricv4.model.StreamSubscriptionPutRequest;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StreamSubscriptionsApi
 */
@Disabled
public class StreamSubscriptionsApiTest {

    private final StreamSubscriptionsApi api = new StreamSubscriptionsApi();

    /**
     * Create Subscription
     *
     * This API provides capability to create user&#39;s Stream Subscriptions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createStreamSubscriptionsTest() throws ApiException {
        UUID streamId = null;
        StreamSubscriptionPostRequest streamSubscriptionPostRequest = null;
        StreamSubscription response = api.createStreamSubscriptions(streamId, streamSubscriptionPostRequest);
        // TODO: test validations
    }

    /**
     * Delete Subscription
     *
     * This API provides capability to delete user&#39;s Stream Subscriptions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteStreamSubscriptionByUuidTest() throws ApiException {
        UUID streamId = null;
        UUID subscriptionId = null;
        StreamSubscription response = api.deleteStreamSubscriptionByUuid(streamId, subscriptionId);
        // TODO: test validations
    }

    /**
     * Get Subscription
     *
     * This API provides capability to delete user&#39;s get Stream Subscriptions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStreamSubscriptionByUuidTest() throws ApiException {
        UUID streamId = null;
        UUID subscriptionId = null;
        StreamSubscription response = api.getStreamSubscriptionByUuid(streamId, subscriptionId);
        // TODO: test validations
    }

    /**
     * Get Subscriptions
     *
     * This API provides capability to retrieve stream subscriptions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStreamSubscriptionsTest() throws ApiException {
        UUID streamId = null;
        Integer offset = null;
        Integer limit = null;
        GetAllStreamSubscriptionResponse response = api.getStreamSubscriptions(streamId, offset, limit);
        // TODO: test validations
    }

    /**
     * Update Subscription
     *
     * This API provides capability to update user&#39;s Stream Subscriptions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateStreamSubscriptionByUuidTest() throws ApiException {
        UUID streamId = null;
        UUID subscriptionId = null;
        StreamSubscriptionPutRequest streamSubscriptionPutRequest = null;
        StreamSubscription response = api.updateStreamSubscriptionByUuid(streamId, subscriptionId, streamSubscriptionPutRequest);
        // TODO: test validations
    }

}
