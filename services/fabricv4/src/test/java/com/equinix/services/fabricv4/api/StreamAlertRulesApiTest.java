/*
 * Equinix Fabric API v4
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.services.fabricv4.api;

import com.equinix.services.fabricv4.ApiException;
import com.equinix.services.fabricv4.model.AlertRulePostRequest;
import com.equinix.services.fabricv4.model.AlertRulePutRequest;
import com.equinix.services.fabricv4.model.Error;
import com.equinix.services.fabricv4.model.StreamAlertRule;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StreamAlertRulesApi
 */
@Disabled
public class StreamAlertRulesApiTest {

    private final StreamAlertRulesApi api = new StreamAlertRulesApi();

    /**
     * Create Stream Alert Rules
     *
     * This API provides capability to create user&#39;s Stream Alert Rules
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createStreamAlertRulesTest() throws ApiException {
        UUID streamId = null;
        AlertRulePostRequest alertRulePostRequest = null;
        StreamAlertRule response = api.createStreamAlertRules(streamId, alertRulePostRequest);
        // TODO: test validations
    }

    /**
     * Update Stream Alert Rules
     *
     * This API provides capability to delete a user&#39;s stream alert rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteStreamAlertRuleByUuidTest() throws ApiException {
        UUID streamId = null;
        UUID alertRuleId = null;
        StreamAlertRule response = api.deleteStreamAlertRuleByUuid(streamId, alertRuleId);
        // TODO: test validations
    }

    /**
     * Get Stream Alert Rules
     *
     * This API provides capability to get user&#39;s stream alert rules
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStreamAlertRuleByUuidTest() throws ApiException {
        UUID streamId = null;
        UUID alertRuleId = null;
        StreamAlertRule response = api.getStreamAlertRuleByUuid(streamId, alertRuleId);
        // TODO: test validations
    }

    /**
     * Get Stream Alert Rules
     *
     * This API provides capability to retrieve stream alert rules
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStreamAlertRulesTest() throws ApiException {
        UUID streamId = null;
        Integer offset = null;
        Integer limit = null;
        StreamAlertRule response = api.getStreamAlertRules(streamId, offset, limit);
        // TODO: test validations
    }

    /**
     * Update Stream Alert Rules
     *
     * This API provides capability to update a user&#39;s stream alert rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateStreamAlertRuleByUuidTest() throws ApiException {
        UUID streamId = null;
        UUID alertRuleId = null;
        AlertRulePutRequest alertRulePutRequest = null;
        StreamAlertRule response = api.updateStreamAlertRuleByUuid(streamId, alertRuleId, alertRulePutRequest);
        // TODO: test validations
    }

}
