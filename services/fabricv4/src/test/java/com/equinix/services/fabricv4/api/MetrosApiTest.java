/*
 * Equinix Fabric API v4
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.services.fabricv4.api;

import com.equinix.services.fabricv4.ApiException;
import com.equinix.services.fabricv4.model.Metro;
import com.equinix.services.fabricv4.model.MetroError;
import com.equinix.services.fabricv4.model.MetroResponse;
import com.equinix.services.fabricv4.model.Presence;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MetrosApi
 */
@Disabled
public class MetrosApiTest {

    private final MetrosApi api = new MetrosApi();

    /**
     * Get Metro by Code
     *
     * GET Metros retrieves all Equinix Fabric metros, as well as latency data between each metro location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMetroByCodeTest() throws ApiException {
        String metroCode = null;
        Metro response = api.getMetroByCode(metroCode);
        // TODO: test validations
    }

    /**
     * Get all Metros
     *
     * GET All Subscriber Metros with an option query parameter to return all Equinix Fabric metros in which the customer has a presence, as well as latency data for each location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMetrosTest() throws ApiException {
        Presence presence = null;
        Integer offset = null;
        Integer limit = null;
        MetroResponse response = api.getMetros(presence, offset, limit);
        // TODO: test validations
    }

}
