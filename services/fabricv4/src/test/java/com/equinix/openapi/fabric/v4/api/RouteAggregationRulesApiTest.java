/*
 * Equinix Fabric API v4
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.api;

import com.equinix.openapi.fabric.ApiException;
import com.equinix.openapi.fabric.v4.model.Error;
import com.equinix.openapi.fabric.v4.model.GetRouteAggregationRulesResponse;
import com.equinix.openapi.fabric.v4.model.RouteAggregationRulesBase;
import com.equinix.openapi.fabric.v4.model.RouteAggregationRulesChangeData;
import com.equinix.openapi.fabric.v4.model.RouteAggregationRulesChangeDataResponse;
import com.equinix.openapi.fabric.v4.model.RouteAggregationRulesData;
import com.equinix.openapi.fabric.v4.model.RouteAggregationRulesPatchRequestItem;
import com.equinix.openapi.fabric.v4.model.RouteAggregationRulesPostRequest;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RouteAggregationRulesApi
 */
@Disabled
public class RouteAggregationRulesApiTest {

    private final RouteAggregationRulesApi api = new RouteAggregationRulesApi();

    /**
     * Create RARule
     *
     * This API provides capability to create a Route Aggregation Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRouteAggregationRuleTest() throws ApiException {
        String routeAggregationId = null;
        RouteAggregationRulesBase routeAggregationRulesBase = null;
        RouteAggregationRulesData response = api.createRouteAggregationRule(routeAggregationId, routeAggregationRulesBase);
        // TODO: test validations
    }

    /**
     * Bulk RARules
     *
     * This API provides capability to create bulk route aggregation rules
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRouteAggregationRulesInBulkTest() throws ApiException {
        String routeAggregationId = null;
        RouteAggregationRulesPostRequest routeAggregationRulesPostRequest = null;
        GetRouteAggregationRulesResponse response = api.createRouteAggregationRulesInBulk(routeAggregationId, routeAggregationRulesPostRequest);
        // TODO: test validations
    }

    /**
     * DeleteRARule
     *
     * This API provides capability to delete a Route aggregation Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRouteAggregationRuleByUuidTest() throws ApiException {
        String routeAggregationId = null;
        String routeAggregationRuleId = null;
        RouteAggregationRulesData response = api.deleteRouteAggregationRuleByUuid(routeAggregationId, routeAggregationRuleId);
        // TODO: test validations
    }

    /**
     * GetRARule By UUID
     *
     * This API provides capability to view a Route Aggregation Rule by UUID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRouteAggregationRuleByUuidTest() throws ApiException {
        String routeAggregationId = null;
        String routeAggregationRuleId = null;
        RouteAggregationRulesData response = api.getRouteAggregationRuleByUuid(routeAggregationId, routeAggregationRuleId);
        // TODO: test validations
    }

    /**
     * Get Change By ID
     *
     * This API provides capability to retrieve a specific Route Aggregation Rule&#39;s Changes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRouteAggregationRuleChangeByUuidTest() throws ApiException {
        String routeAggregationId = null;
        String routeAggregationRuleId = null;
        UUID changeId = null;
        RouteAggregationRulesChangeData response = api.getRouteAggregationRuleChangeByUuid(routeAggregationId, routeAggregationRuleId, changeId);
        // TODO: test validations
    }

    /**
     * Get All Changes
     *
     * This API provides capability to retrieve all of a Route Aggregation Rule&#39;s Changes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRouteAggregationRuleChangesTest() throws ApiException {
        String routeAggregationId = null;
        String routeAggregationRuleId = null;
        Integer offset = null;
        Integer limit = null;
        RouteAggregationRulesChangeDataResponse response = api.getRouteAggregationRuleChanges(routeAggregationId, routeAggregationRuleId, offset, limit);
        // TODO: test validations
    }

    /**
     * GetRARules
     *
     * This API provides capability to get all Route Aggregations Rules for Fabric
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRouteAggregationRulesTest() throws ApiException {
        String routeAggregationId = null;
        Integer offset = null;
        Integer limit = null;
        GetRouteAggregationRulesResponse response = api.getRouteAggregationRules(routeAggregationId, offset, limit);
        // TODO: test validations
    }

    /**
     * PatchRARule
     *
     * This API provides capability to partially update a Route Aggregation Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchRouteAggregationRuleByUuidTest() throws ApiException {
        String routeAggregationId = null;
        String routeAggregationRuleId = null;
        List<RouteAggregationRulesPatchRequestItem> routeAggregationRulesPatchRequestItem = null;
        RouteAggregationRulesData response = api.patchRouteAggregationRuleByUuid(routeAggregationId, routeAggregationRuleId, routeAggregationRulesPatchRequestItem);
        // TODO: test validations
    }

    /**
     * ReplaceRARule
     *
     * This API provides capability to replace a Route Aggregation Rule completely
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replaceRouteAggregationRuleByUuidTest() throws ApiException {
        String routeAggregationId = null;
        String routeAggregationRuleId = null;
        RouteAggregationRulesBase routeAggregationRulesBase = null;
        RouteAggregationRulesData response = api.replaceRouteAggregationRuleByUuid(routeAggregationId, routeAggregationRuleId, routeAggregationRulesBase);
        // TODO: test validations
    }

}
